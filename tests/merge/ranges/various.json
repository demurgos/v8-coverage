[
  {
    "name": "Three empty trees",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Equal children, same startOffset as parents",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 3,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 3,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 3,
                  "count": 3
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Equal children, same endOffset as parents",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 6,
                    "endOffset": 9,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 6,
                    "endOffset": 9,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 30
                },
                {
                  "startOffset": 6,
                  "endOffset": 9,
                  "count": 3
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Disjoint (strict) children, offsets matching parents (permutation 0)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 3,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 6,
                    "endOffset": 9,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 3,
                  "count": 21
                },
                {
                  "startOffset": 6,
                  "endOffset": 9,
                  "count": 12
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Disjoint (strict) children, offsets matching parents (permutation 1)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 6,
                    "endOffset": 9,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 3,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 3,
                  "count": 21
                },
                {
                  "startOffset": 6,
                  "endOffset": 9,
                  "count": 12
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Disjoint (adjacent) children (permutation 0)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 7,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 30
                },
                {
                  "startOffset": 1,
                  "endOffset": 4,
                  "count": 21
                },
                {
                  "startOffset": 4,
                  "endOffset": 7,
                  "count": 12
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Disjoint (adjacent) children (permutation 1)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 7,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 30
                },
                {
                  "startOffset": 1,
                  "endOffset": 4,
                  "count": 21
                },
                {
                  "startOffset": 4,
                  "endOffset": 7,
                  "count": 12
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 2 left & 1 right (permutation 0)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 5,
                  "count": 7
                },
                {
                  "startOffset": 5,
                  "endOffset": 6,
                  "count": 61
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 2 left & 1 right (permutation 1)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 5,
                  "count": 7
                },
                {
                  "startOffset": 5,
                  "endOffset": 6,
                  "count": 61
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 2 left & 1 right (permutation 2)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 5,
                  "count": 7
                },
                {
                  "startOffset": 5,
                  "endOffset": 6,
                  "count": 61
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 2 left & 1 right (permutation 3)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 5,
                  "count": 7
                },
                {
                  "startOffset": 5,
                  "endOffset": 6,
                  "count": 61
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 2 left & 1 right (permutation 4)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 5,
                  "count": 7
                },
                {
                  "startOffset": 5,
                  "endOffset": 6,
                  "count": 61
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 2 left & 1 right (permutation 5)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 5,
                  "count": 7
                },
                {
                  "startOffset": 5,
                  "endOffset": 6,
                  "count": 61
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 1 left & 2 right (permutation 0)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 3,
                  "endOffset": 6,
                  "count": 61
                },
                {
                  "startOffset": 4,
                  "endOffset": 6,
                  "count": 7
                },
                {
                  "startOffset": 6,
                  "endOffset": 8,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 1 left & 2 right (permutation 1)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 3,
                  "endOffset": 6,
                  "count": 61
                },
                {
                  "startOffset": 4,
                  "endOffset": 6,
                  "count": 7
                },
                {
                  "startOffset": 6,
                  "endOffset": 8,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 1 left & 2 right (permutation 2)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 3,
                  "endOffset": 6,
                  "count": 61
                },
                {
                  "startOffset": 4,
                  "endOffset": 6,
                  "count": 7
                },
                {
                  "startOffset": 6,
                  "endOffset": 8,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 1 left & 2 right (permutation 3)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 3,
                  "endOffset": 6,
                  "count": 61
                },
                {
                  "startOffset": 4,
                  "endOffset": 6,
                  "count": 7
                },
                {
                  "startOffset": 6,
                  "endOffset": 8,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 1 left & 2 right (permutation 4)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 3,
                  "endOffset": 6,
                  "count": 61
                },
                {
                  "startOffset": 4,
                  "endOffset": 6,
                  "count": 7
                },
                {
                  "startOffset": 6,
                  "endOffset": 8,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Three trees: Partial overlap: 1 left & 2 right (permutation 5)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 40
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 20
                  },
                  {
                    "startOffset": 4,
                    "endOffset": 8,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 70
                },
                {
                  "startOffset": 3,
                  "endOffset": 6,
                  "count": 61
                },
                {
                  "startOffset": 4,
                  "endOffset": 6,
                  "count": 7
                },
                {
                  "startOffset": 6,
                  "endOffset": 8,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Normalization: two trees with complementary children (not summing to the same count)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 1
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 8,
                    "count": 6
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 3
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 4
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 8,
                    "count": 7
                  },
                  {
                    "startOffset": 5,
                    "endOffset": 8,
                    "count": 3
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 5
                },
                {
                  "startOffset": 1,
                  "endOffset": 8,
                  "count": 13
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 10
                },
                {
                  "startOffset": 5,
                  "endOffset": 8,
                  "count": 9
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Normalization: two trees with complementary children (summing to the same count, same as parent)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 1
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 8,
                    "count": 6
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 5
                  },
                  {
                    "startOffset": 5,
                    "endOffset": 8,
                    "count": 7
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 4
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 8,
                    "count": 8
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 9
                  },
                  {
                    "startOffset": 5,
                    "endOffset": 8,
                    "count": 7
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 5
                },
                {
                  "startOffset": 1,
                  "endOffset": 8,
                  "count": 14
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Normalization: two trees with complementary children (summing to the same count, different from parent)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 1
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 8,
                    "count": 6
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 3
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 9,
                    "count": 4
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 8,
                    "count": 7
                  },
                  {
                    "startOffset": 5,
                    "endOffset": 8,
                    "count": 4
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 9,
                  "count": 5
                },
                {
                  "startOffset": 1,
                  "endOffset": 8,
                  "count": 10
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: a+b",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 20
                },
                {
                  "startOffset": 0,
                  "endOffset": 5,
                  "count": 11
                },
                {
                  "startOffset": 1,
                  "endOffset": 4,
                  "count": 2
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: b+a",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 20
                },
                {
                  "startOffset": 0,
                  "endOffset": 5,
                  "count": 11
                },
                {
                  "startOffset": 1,
                  "endOffset": 4,
                  "count": 2
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: a+c",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 20
                },
                {
                  "startOffset": 0,
                  "endOffset": 6,
                  "count": 11
                },
                {
                  "startOffset": 2,
                  "endOffset": 4,
                  "count": 2
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: b+c",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 20
                },
                {
                  "startOffset": 1,
                  "endOffset": 6,
                  "count": 11
                },
                {
                  "startOffset": 2,
                  "endOffset": 5,
                  "count": 2
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: (a+b)+c",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 20
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 5,
                    "count": 11
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 4,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 6,
                  "count": 21
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 12
                },
                {
                  "startOffset": 2,
                  "endOffset": 4,
                  "count": 3
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: (a+c)+b",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 20
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 6,
                    "count": 11
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 4,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 6,
                  "count": 21
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 12
                },
                {
                  "startOffset": 2,
                  "endOffset": 4,
                  "count": 3
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: a+(b+c)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 6,
                    "count": 11
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 6,
                  "count": 21
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 12
                },
                {
                  "startOffset": 2,
                  "endOffset": 4,
                  "count": 3
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: a+b+c",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 6,
                  "count": 21
                },
                {
                  "startOffset": 1,
                  "endOffset": 5,
                  "count": 12
                },
                {
                  "startOffset": 2,
                  "endOffset": 4,
                  "count": 3
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a similar sliding chain: a+b+c+d",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 2,
                    "endOffset": 6,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 7,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 31
                },
                {
                  "startOffset": 1,
                  "endOffset": 6,
                  "count": 22
                },
                {
                  "startOffset": 2,
                  "endOffset": 5,
                  "count": 13
                },
                {
                  "startOffset": 3,
                  "endOffset": 4,
                  "count": 4
                }
              ],
              "count": 40
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a tagged sliding chain: a+b",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 4,
                  "count": 21
                },
                {
                  "startOffset": 1,
                  "endOffset": 4,
                  "count": 3
                },
                {
                  "startOffset": 4,
                  "endOffset": 5,
                  "count": 12
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges a tagged sliding chain: a+b",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 20
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 5,
                    "count": 2
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 7,
                    "count": 10
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 7,
                  "count": 30
                },
                {
                  "startOffset": 0,
                  "endOffset": 4,
                  "count": 21
                },
                {
                  "startOffset": 1,
                  "endOffset": 4,
                  "count": 3
                },
                {
                  "startOffset": 4,
                  "endOffset": 5,
                  "count": 12
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "merges three trees with a complex relation (chains, nesting)",
    "status": "run",
    "inputs": [
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 16,
                    "count": 1
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 4,
                    "count": 6
                  },
                  {
                    "startOffset": 1,
                    "endOffset": 2,
                    "count": 2
                  },
                  {
                    "startOffset": 6,
                    "endOffset": 7,
                    "count": 4
                  },
                  {
                    "startOffset": 10,
                    "endOffset": 15,
                    "count": 9
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 16,
                    "count": 4
                  },
                  {
                    "startOffset": 0,
                    "endOffset": 1,
                    "count": 2
                  },
                  {
                    "startOffset": 5,
                    "endOffset": 8,
                    "count": 5
                  },
                  {
                    "startOffset": 9,
                    "endOffset": 12,
                    "count": 3
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "result": [
          {
            "scriptId": "0",
            "url": "/lib.js",
            "functions": [
              {
                "functionName": "test",
                "isBlockCoverage": true,
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 16,
                    "count": 10
                  },
                  {
                    "startOffset": 3,
                    "endOffset": 11,
                    "count": 7
                  },
                  {
                    "startOffset": 7,
                    "endOffset": 8,
                    "count": 3
                  },
                  {
                    "startOffset": 13,
                    "endOffset": 14,
                    "count": 3
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "expected": {
      "result": [
        {
          "scriptId": "0",
          "url": "/lib.js",
          "functions": [
            {
              "functionName": "test",
              "isBlockCoverage": true,
              "ranges": [
                {
                  "startOffset": 0,
                  "endOffset": 16,
                  "count": 15
                },
                {
                  "startOffset": 0,
                  "endOffset": 4,
                  "count": 20
                },
                {
                  "startOffset": 0,
                  "endOffset": 1,
                  "count": 18
                },
                {
                  "startOffset": 1,
                  "endOffset": 2,
                  "count": 16
                },
                {
                  "startOffset": 3,
                  "endOffset": 4,
                  "count": 17
                },
                {
                  "startOffset": 4,
                  "endOffset": 11,
                  "count": 12
                },
                {
                  "startOffset": 5,
                  "endOffset": 8,
                  "count": 13
                },
                {
                  "startOffset": 6,
                  "endOffset": 7,
                  "count": 16
                },
                {
                  "startOffset": 7,
                  "endOffset": 8,
                  "count": 9
                },
                {
                  "startOffset": 9,
                  "endOffset": 11,
                  "count": 11
                },
                {
                  "startOffset": 10,
                  "endOffset": 11,
                  "count": 19
                },
                {
                  "startOffset": 11,
                  "endOffset": 15,
                  "count": 23
                },
                {
                  "startOffset": 11,
                  "endOffset": 12,
                  "count": 22
                },
                {
                  "startOffset": 13,
                  "endOffset": 14,
                  "count": 16
                }
              ]
            }
          ]
        }
      ]
    }
  }
]